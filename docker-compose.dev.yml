version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mood_tracker_api
    environment:
      - DOCKER=1
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:15-alpine
    container_name: mood_tracker_db
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=mood_tracker
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mood_tracker"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: mood_tracker_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: mood_tracker_pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@moodtracker.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "8080:80"
    depends_on:
      - db

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: mood_tracker_redis_commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis

  migrations:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mood_tracker_migrations
    environment:
      - DOCKER=1
    command: >
      sh -c "poetry run alembic upgrade head"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: on-failure

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: mood_tracker_network